[{"/mnt/d/Bruno/Code/personal/blog/front/src/index.tsx":"1","/mnt/d/Bruno/Code/personal/blog/front/src/reportWebVitals.ts":"2","/mnt/d/Bruno/Code/personal/blog/front/src/App.tsx":"3","/mnt/d/Bruno/Code/personal/blog/front/src/theme/colors.ts":"4","/mnt/d/Bruno/Code/personal/blog/front/src/pages/Main.tsx":"5","/mnt/d/Bruno/Code/personal/blog/front/src/layout/Header/Header.tsx":"6","/mnt/d/Bruno/Code/personal/blog/front/src/pages/Post.tsx":"7","/mnt/d/Bruno/Code/personal/blog/front/src/pages/Home.tsx":"8","/mnt/d/Bruno/Code/personal/blog/front/src/shared/UI.ts":"9","/mnt/d/Bruno/Code/personal/blog/front/src/layout/Header/Desktop.tsx":"10","/mnt/d/Bruno/Code/personal/blog/front/src/layout/Header/Mobile.tsx":"11","/mnt/d/Bruno/Code/personal/blog/front/src/shared/UI/components/ArticleCard.tsx":"12","/mnt/d/Bruno/Code/personal/blog/front/src/layout/Header/Logo.tsx":"13","/mnt/d/Bruno/Code/personal/blog/front/src/history.ts":"14"},{"size":552,"mtime":1610664672208,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609971929095,"results":"17","hashOfConfig":"16"},{"size":399,"mtime":1612722138799,"results":"18","hashOfConfig":"16"},{"size":2749,"mtime":1615580110018,"results":"19","hashOfConfig":"16"},{"size":1525,"mtime":1622304188395,"results":"20","hashOfConfig":"16"},{"size":3008,"mtime":1622292017474,"results":"21","hashOfConfig":"16"},{"size":8177,"mtime":1616346448041,"results":"22","hashOfConfig":"16"},{"size":5504,"mtime":1622304366436,"results":"23","hashOfConfig":"16"},{"size":39,"mtime":1611430003520,"results":"24","hashOfConfig":"16"},{"size":2411,"mtime":1622295125947,"results":"25","hashOfConfig":"16"},{"size":5550,"mtime":1622295134192,"results":"26","hashOfConfig":"16"},{"size":6731,"mtime":1622306729244,"results":"27","hashOfConfig":"16"},{"size":619,"mtime":1622304307287,"results":"28","hashOfConfig":"16"},{"size":87,"mtime":1622303896108,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1d7fcfz",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/d/Bruno/Code/personal/blog/front/src/index.tsx",[],["62","63"],"/mnt/d/Bruno/Code/personal/blog/front/src/reportWebVitals.ts",[],"/mnt/d/Bruno/Code/personal/blog/front/src/App.tsx",[],"/mnt/d/Bruno/Code/personal/blog/front/src/theme/colors.ts",[],"/mnt/d/Bruno/Code/personal/blog/front/src/pages/Main.tsx",[],"/mnt/d/Bruno/Code/personal/blog/front/src/layout/Header/Header.tsx",[],"/mnt/d/Bruno/Code/personal/blog/front/src/pages/Post.tsx",["64","65","66","67"],"import ArticleCard from \"../shared/UI/components/ArticleCard\";\r\nimport {\r\n    makeStyles,\r\n    Typography,\r\n    Link,\r\n    MenuItem,\r\n    Button,\r\n    IconButton\r\n} from \"@material-ui/core\";\r\nimport { ChatBubbleOutlineOutlined, FavoriteBorderOutlined, TurnedInNot, Share } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pageContainer: {\r\n    },\r\n    list: {\r\n        padding: '0',\r\n        '&>article:not(:last-child)': {\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    headerContainer: {\r\n        height: '3.5rem',\r\n        display: 'flex',\r\n        flexFlow: 'row',\r\n        justifyContent: 'start',\r\n        alignItems: 'center',\r\n        padding: '0 1rem'\r\n    },\r\n    pageLayout: {\r\n        maxWidth: theme.breakpoints.values.lg,\r\n        margin: '0 auto',\r\n        display: 'grid',\r\n        [theme.breakpoints.between('md', 'xl')]: {\r\n            gridTemplateColumns: 'auto 1fr 250px',\r\n            gridColumnGap: theme.spacing(2),\r\n            padding: theme.spacing(2),\r\n        },\r\n        [theme.breakpoints.between('sm', 'md')]: {\r\n            gridTemplateColumns: 'auto 1fr',\r\n            gridColumnGap: theme.spacing(1),\r\n            padding: theme.spacing(1),\r\n            '&>aside:last-child': {\r\n                display: 'none',\r\n            }\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            gridTemplateColumns: '1fr',\r\n            '&>aside': {\r\n                display: 'none',\r\n            }\r\n        },\r\n        // gridTemplateRows: 'repeat(15, auto)',\r\n    },\r\n    leftContainer: {\r\n        marginTop: theme.spacing(1.5),\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        '&>div:not(:last-child)': {\r\n            // marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(2)\r\n        },\r\n        '&>div': {\r\n            display: 'flex',\r\n            flexFlow: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n            // marginBottom\r\n        }\r\n    },\r\n    tagHeader: {\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    headerTitle: {\r\n        fontFamily: '\"Lora\", sans-serif',\r\n        padding: `1rem ${theme.spacing(1.5)}px`,\r\n    },\r\n    headerSubtitle: {\r\n        fontFamily: '\"Lora\", sans-serif',\r\n        color: '#a9abb3',\r\n        padding: `0 ${theme.spacing(1.5)}px 1rem`,\r\n    },\r\n    leftActionButton: {\r\n        color: theme.palette.primary.contrastText,\r\n        // textDecoration: 'none',\r\n        // '&:hover': {\r\n        //     color: theme.palette.secondary.main\r\n        // }\r\n    },\r\n    mainImg: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nfunction Post() {\r\n    const popularTagsData = [\r\n        {\r\n            label: 'javascript',\r\n            url: ''\r\n        },\r\n        {\r\n            label: 'webdev',\r\n            url: ''\r\n        },\r\n        {\r\n            label: 'react',\r\n            url: ''\r\n        },\r\n        {\r\n            label: 'CAPM',\r\n            url: ''\r\n        },\r\n\r\n    ];\r\n\r\n    const tags = popularTagsData.map(({ label, url }) => {\r\n        return (\r\n            <Link\r\n                {...{\r\n                    // component: RouterLink,\r\n                    to: url,\r\n                    color: \"inherit\",\r\n                    style: { textDecoration: \"none\" },\r\n                    key: label,\r\n                }}\r\n            >\r\n                <MenuItem>\r\n                    #{label}\r\n                </MenuItem>\r\n            </Link>\r\n        );\r\n    });\r\n    // const actionData = [\r\n    //     {\r\n    //         count: '',\r\n    //         url: ''\r\n    //     },\r\n    //     {\r\n    //         count: '',\r\n    //         url: ''\r\n    //     },\r\n    //     {\r\n    //         count: '',\r\n    //         url: ''\r\n    //     },\r\n    //     {\r\n    //         count: '',\r\n    //         url: ''\r\n    //     },\r\n    // ];\r\n    // const action = actionData.map(({ count, url }) => {\r\n    //     return (\r\n    //         <Link\r\n    //             {...{\r\n    //                 // component: RouterLink,\r\n    //                 to: url,\r\n    //                 color: \"inherit\",\r\n    //                 style: { textDecoration: \"none\" },\r\n    //                 key: count,\r\n    //             }}\r\n    //         >\r\n    //             <MenuItem>\r\n    //                 {count}\r\n    //             </MenuItem>\r\n    //         </Link>\r\n    //     );\r\n    // });\r\n\r\n    const oArticle = {\r\n        title: 'Learn git concepts, not commands',\r\n        url: '',\r\n        imgSrc: 'https://res.cloudinary.com/practicaldev/image/fetch/s--Vb8HmBo4--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/1k7xftlw20xk6jgyldlj.jpeg',\r\n        isVisibleImg: true,\r\n        user: {\r\n            name: 'Bruno IvÃ¡n Silva Narro',\r\n            imgSrc: 'http://'\r\n        },\r\n        date: '7 Febrero',\r\n        tags: [\r\n            { url: 'http://', name: 'react' },\r\n            { url: 'http://', name: 'javascript' },\r\n            { url: 'http://', name: 'typescript' },\r\n        ],\r\n        reactions: 304,\r\n        comments: 438,\r\n        timeToRead: 2,\r\n        otro: 'dasd'\r\n    };\r\n\r\n    const data = Array(10).fill(oArticle).map((i, index) => ({ ...i, isVisibleImg: !index }));\r\n    const { leftActionButton, mainImg, list, pageLayout, leftContainer, headerTitle, headerSubtitle } = useStyles();\r\n    const articles = data.map(a => <ArticleCard data={a}></ArticleCard>);\r\n\r\n    const imgData = {\r\n        isVisibleImg: true,\r\n        imgSrc: 'https://store-images.s-microsoft.com/image/apps.16825.66773763610413114.5c7115ed-b566-4d24-80ce-7027cb5b7c3e.7d2fc072-886d-446e-9f37-e71d442ae729?mode=scale&q=90&h=1080&w=1920'\r\n    };\r\n\r\n    return (\r\n        <div className={pageLayout}>\r\n            <aside className={leftContainer}>\r\n                <div>\r\n                    <IconButton className={leftActionButton} title=\"Liked\" aria-label=\"love post\" component=\"span\">\r\n                        <FavoriteBorderOutlined />\r\n                    </IconButton>\r\n                    <Typography variant=\"body1\" component=\"p\">\r\n                        182\r\n                    </Typography>\r\n                </div>\r\n                <div>\r\n                    <IconButton className={leftActionButton} title=\"Unicorn\" aria-label=\"say awesome post\" component=\"span\">\r\n                        <ChatBubbleOutlineOutlined />\r\n                    </IconButton>\r\n                    <Typography variant=\"body1\" component=\"p\">\r\n                        44\r\n                    </Typography>\r\n                </div>\r\n                <div>\r\n                    <IconButton className={leftActionButton} title=\"Saved\" aria-label=\"save for later\" component=\"span\">\r\n                        <TurnedInNot />\r\n                    </IconButton>\r\n                    <Typography variant=\"body1\" component=\"p\">\r\n                        354\r\n                    </Typography>\r\n                </div>\r\n                <div>\r\n                    <IconButton className={leftActionButton} title=\"Saved\" aria-label=\"save for later\" component=\"span\">\r\n                        <Share />\r\n                    </IconButton>\r\n                </div>\r\n            </aside>\r\n            <section>\r\n                <header >\r\n                    {/* className={headerContainer} */}\r\n                    <Typography variant=\"h3\" component=\"h3\" className={headerTitle}>\r\n                        5 Simple Things I Removed from My Life to Become Happier\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h5\" className={headerSubtitle}>\r\n                        Happiness comes from subtraction, not addition.\r\n                    </Typography>\r\n                    {\r\n                        imgData.isVisibleImg\r\n                            ? <img src={imgData.imgSrc} alt=\"\"  className={mainImg}/>\r\n                            : ''\r\n                            // className={mainImg}\r\n                    }\r\n                </header>\r\n                {/* <ol className={list}>\r\n                    {articles}\r\n                </ol> */}\r\n            </section>\r\n            <aside></aside>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","/mnt/d/Bruno/Code/personal/blog/front/src/pages/Home.tsx",[],"/mnt/d/Bruno/Code/personal/blog/front/src/shared/UI.ts",[],"/mnt/d/Bruno/Code/personal/blog/front/src/layout/Header/Desktop.tsx",["68","69","70"],"import {\n    Toolbar,\n    makeStyles,\n    Button,\n    TextField\n} from \"@material-ui/core\";\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Url } from \"./interfaces\";\nimport { Logo } from './Logo';\n\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        fontWeight: 700,\n        size: \"18px\",\n        marginLeft: \"38px\",\n    },\n    containerHeader: {\n        minHeight: '100%',\n        height: '100%'\n    },\n    logoContainer: {\n        marginRight: 'auto'\n    },\n    marginsIcon: {\n        marginLeft: theme.spacing(1), //  '0.8rem',\n        marginRight: '0.8rem'\n    },\n    textField: {\n        color: theme.palette.secondary.main,\n        borderColor: theme.palette.secondary.main\n    },\n}));\n\nexport const Desktop = (headersData: Url[]) => {\n    const { menuButton, containerHeader, marginsIcon, logoContainer, textField } = useStyles();\n\n    const getMenuButtons = () => {\n        return headersData.map(({ label, href }) => {\n            return (\n                <Button\n                    {...{\n                        key: label,\n                        color: \"inherit\",\n                        to: href,\n                        // component: RouterLink,\n                        className: menuButton,\n                    }}\n                >\n                    {label}\n                </Button>\n            );\n        });\n    };\n\n    return (\n        <Toolbar className={containerHeader}>\n            <div className={logoContainer}>\n                <Logo />\n                {/* <Button variant=\"contained\" color=\"primary\" aria-label=\"menu\">DEV</Button> */}\n            </div>\n            <div>\n                <TextField InputProps={{\n                    className: textField,\n                    classes: { notchedOutline: textField }\n                }} color=\"secondary\" placeholder=\"Search\" size=\"small\" variant=\"outlined\">\n                    <SearchIcon />\n                </TextField >\n                {/* <Button color=\"secondary\" aria-label=\"menu\">Log in</Button>\n                <Button variant=\"contained\" color=\"primary\" aria-label=\"menu\">Create account</Button> */}\n            </div>\n            {/*\n            <TextField placeholder=\"Search\" size=\"small\" variant=\"outlined\"></TextField >\n            <div>{getMenuButtons()}</div> */}\n        </Toolbar>\n    );\n};","/mnt/d/Bruno/Code/personal/blog/front/src/layout/Header/Mobile.tsx",["71","72","73"],"import {\n    Toolbar,\n    IconButton,\n    Drawer, TextField,\n    Link,\n    MenuItem,\n    makeStyles,\n    Button\n} from \"@material-ui/core\";\nimport {\n    Search as SearchIcon,\n    Close as CloseIcon,\n    AccountBox as AccountBoxIcon,\n    LinkedIn as LinkedInIcon,\n    GitHub as GithubIcon\n} from '@material-ui/icons';\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { HeaderState, Url } from \"./interfaces\";\nimport { Logo } from './Logo';\nimport React from \"react\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    containerHeader: {\n        height: '100%',\n        minHeight: '100%',\n    },\n    drawerPaper: {\n        width: '100vw',\n        background: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText\n    },\n    drawerPaperContent: {\n        height: '100%',\n        display: 'flex',\n        flexFlow: 'column',\n        justifyContent: 'space-between',\n    },\n    drawerHeaderBtns: {\n        display: 'flex'\n    },\n    drawerCloseBtn: {\n        fontSize: '1rem'\n    },\n    logoContainer: {\n        marginRight: 'auto'\n    },\n    textField: {\n        color: theme.palette.secondary.main,\n        borderColor: theme.palette.secondary.main,\n        '& .Mui-focused': {\n            willChange: 'width',\n            transition: 'width 2s',\n            width: '70%',\n        }\n    },\n    linkItem: {\n        fontSize: '20px'\n    },\n    RRSSlinks: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: '1rem 5rem'\n    }\n}));\n\nconst getDrawerChoices = (headersData: Url[]) => {\n    return headersData.map(({ label, href }) => {\n        return (\n            <Link\n                {...{\n                    // component: RouterLink,\n                    to: href,\n                    color: \"inherit\",\n                    style: { textDecoration: \"none\" },\n                    key: label,\n                }}\n            >\n                <MenuItem>\n                    <LinkedInIcon />\n                    {label}\n                </MenuItem>\n            </Link>\n        );\n    });\n};\n\nexport const Mobile = (headersData: Url[], state: any, setState: any) => {\n    const { containerHeader, drawerPaperContent, RRSSlinks, drawerCloseBtn, drawerPaper, logoContainer, textField, drawerHeaderBtns } = useStyles();\n    const { drawerOpen } = state;\n    const handleDrawerOpen = () =>\n        setState((prevState: HeaderState) => ({ ...prevState, drawerOpen: true }));\n    const handleDrawerClose = () =>\n        setState((prevState: HeaderState) => ({ ...prevState, drawerOpen: false }));\n\n    return (\n        <Toolbar className={containerHeader}>\n            <IconButton\n                {...{\n                    edge: \"start\",\n                    color: \"inherit\",\n                    \"aria-label\": \"menu\",\n                    \"aria-haspopup\": \"true\",\n                    onClick: handleDrawerOpen,\n                }}\n            >\n                <MenuIcon />\n            </IconButton>\n\n            <Drawer\n                {...{\n                    anchor: \"left\",\n                    open: drawerOpen,\n                    onClose: handleDrawerClose,\n                }}\n                classes={{\n                    paper: drawerPaper,\n                }}\n            >\n                <div className={drawerPaperContent} >\n                    <div className={drawerHeaderBtns}>\n                        <IconButton className={logoContainer}\n                            {...{\n                                color: \"inherit\",\n                                \"aria-label\": \"user\",\n\n                            }}\n                        >\n                            <AccountBoxIcon />\n                        </IconButton>\n\n                        <IconButton\n                            {...{\n                                color: \"inherit\",\n                                // color: 'secondary',\n                                \"aria-label\": \"close\",\n                                \"aria-haspopup\": \"true\",\n                                onClick: handleDrawerClose,\n                            }}\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n\n                    <div>\n                        {getDrawerChoices(headersData)}\n                    </div>\n\n                    <div className={RRSSlinks}>\n                        <IconButton\n                            aria-label=\"Linkedin.com\"\n                            onClick={() => window.open(\"https://www.Linkedin.com\", \"_blank\")}\n                        >\n                            <LinkedInIcon />\n                        </IconButton>\n                        <IconButton\n                            aria-label=\"Linkedin.com\"\n                            onClick={() => window.open(\"https://www.github.com\", \"_blank\")}\n                        >\n                            <GithubIcon />\n                        </IconButton>\n                    </div>\n                </div>\n            </Drawer>\n\n            <div className={logoContainer}>\n                <Logo />\n            </div>\n            <TextField InputProps={{\n                className: textField,\n                classes: { notchedOutline: textField }\n            }} color=\"secondary\" placeholder=\"Search\" size=\"small\" variant=\"outlined\"></TextField >\n            {/* <SearchIcon className=\"marginLS marginRS\" /> */}\n            {/* <Button variant=\"contained\" color=\"primary\" aria-label=\"menu\">Create account</Button> */}\n        </Toolbar>\n    );\n};\n// className={textField}","/mnt/d/Bruno/Code/personal/blog/front/src/shared/UI/components/ArticleCard.tsx",["74","75"],"/mnt/d/Bruno/Code/personal/blog/front/src/layout/Header/Logo.tsx",[],"/mnt/d/Bruno/Code/personal/blog/front/src/history.ts",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":7,"column":5,"nodeType":"82","messageId":"83","endLine":7,"endColumn":11},{"ruleId":"80","severity":1,"message":"84","line":115,"column":11,"nodeType":"82","messageId":"83","endLine":115,"endColumn":15},{"ruleId":"80","severity":1,"message":"85","line":190,"column":40,"nodeType":"82","messageId":"83","endLine":190,"endColumn":44},{"ruleId":"80","severity":1,"message":"86","line":191,"column":11,"nodeType":"82","messageId":"83","endLine":191,"endColumn":19},{"ruleId":"80","severity":1,"message":"87","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":16},{"ruleId":"80","severity":1,"message":"88","line":39,"column":42,"nodeType":"82","messageId":"83","endLine":39,"endColumn":53},{"ruleId":"80","severity":1,"message":"89","line":41,"column":11,"nodeType":"82","messageId":"83","endLine":41,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":8,"column":5,"nodeType":"82","messageId":"83","endLine":8,"endColumn":11},{"ruleId":"80","severity":1,"message":"90","line":11,"column":15,"nodeType":"82","messageId":"83","endLine":11,"endColumn":25},{"ruleId":"80","severity":1,"message":"91","line":90,"column":61,"nodeType":"82","messageId":"83","endLine":90,"endColumn":75},{"ruleId":"92","severity":1,"message":"93","line":153,"column":37,"nodeType":"94","endLine":153,"endColumn":92},{"ruleId":"92","severity":1,"message":"93","line":180,"column":21,"nodeType":"94","endLine":180,"endColumn":84},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'tags' is assigned a value but never used.","'list' is assigned a value but never used.","'articles' is assigned a value but never used.","'MenuIcon' is defined but never used.","'marginsIcon' is assigned a value but never used.","'getMenuButtons' is assigned a value but never used.","'SearchIcon' is defined but never used.","'drawerCloseBtn' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]